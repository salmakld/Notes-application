{"ast":null,"code":"import _objectSpread from\"C:/Users/MohamedCHERCHERI/Desktop/Salma/salma_jobs/Learn/Projects/Django/notes_app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/MohamedCHERCHERI/Desktop/Salma/salma_jobs/Learn/Projects/Django/notes_app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/MohamedCHERCHERI/Desktop/Salma/salma_jobs/Learn/Projects/Django/notes_app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectDestructuringEmpty from\"C:/Users/MohamedCHERCHERI/Desktop/Salma/salma_jobs/Learn/Projects/Django/notes_app/frontend/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\MohamedCHERCHERI\\\\Desktop\\\\Salma\\\\salma_jobs\\\\Learn\\\\Projects\\\\Django\\\\notes_app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import{ReactComponent as ArrowLeft}from\"../assets/arrow-left.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NotePage=function NotePage(_ref){_objectDestructuringEmpty(_ref);var _useParams=useParams(),id=_useParams.id;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];var history=useNavigate();useEffect(function(){getNote();},[id]);var getNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/api/note/\".concat(id));case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;setNote(data);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getNote(){return _ref2.apply(this,arguments);};}();var createNote=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:fetch(\"/api/note/create/\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(note)});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function createNote(){return _ref3.apply(this,arguments);};}();var updateNote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:fetch(\"/api/note/\".concat(id,\"/update/\"),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(note)});history(\"/\");case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function updateNote(){return _ref4.apply(this,arguments);};}();var deleteNote=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(id===\"new\")){_context4.next=2;break;}return _context4.abrupt(\"return\");case 2:fetch(\"/api/note/\".concat(id,\"/delete/\"),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"}});case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function deleteNote(){return _ref5.apply(this,arguments);};}();var handleSubmit=function handleSubmit(){if(id!==\"new\"&&note.body===''){// if note is empty and it's not a new note, delete it\ndeleteNote();}else if(id!==\"new\"){// else update note\nupdateNote();}else if(id===\"new\"&&note!==null){createNote();}history(\"/\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"note\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"note-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(ArrowLeft,{onClick:handleSubmit})}),id!==\"new\"?/*#__PURE__*/_jsx(\"button\",{onClick:deleteNote,children:\" Delete\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\" Done\"})]}),/*#__PURE__*/_jsx(\"textarea\",{onChange:function onChange(e){setNote(_objectSpread(_objectSpread({},note),{},{body:e.target.value}));},value:note===null||note===void 0?void 0:note.body})]});};export default NotePage;","map":{"version":3,"sources":["C:/Users/MohamedCHERCHERI/Desktop/Salma/salma_jobs/Learn/Projects/Django/notes_app/frontend/src/pages/NotePage.js"],"names":["React","useEffect","useState","useParams","useNavigate","ReactComponent","ArrowLeft","NotePage","id","note","setNote","history","getNote","fetch","response","json","data","createNote","method","headers","body","JSON","stringify","updateNote","deleteNote","handleSubmit","e","target","value"],"mappings":"45BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,SAAT,CAAoBC,WAApB,KAAuC,kBAAvC,CACA,OAASC,cAAc,GAAIC,CAAAA,SAA3B,KAA4C,0BAA5C,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAQ,iCACvB,eAAaJ,SAAS,EAAtB,CAAMK,EAAN,YAAMA,EAAN,CACA,cAAsBN,QAAQ,CAAC,IAAD,CAA9B,wCAAKO,IAAL,eAAWC,OAAX,eACA,GAAMC,CAAAA,OAAO,CAAGP,WAAW,EAA3B,CAEAH,SAAS,CAAC,UAAM,CACdW,OAAO,GACR,CAFQ,CAEN,CAACJ,EAAD,CAFM,CAAT,CAIA,GAAII,CAAAA,OAAO,2FAAG,2KACSC,CAAAA,KAAK,qBAAcL,EAAd,EADd,QACRM,QADQ,qCAEKA,CAAAA,QAAQ,CAACC,IAAT,EAFL,QAERC,IAFQ,eAGZN,OAAO,CAACM,IAAD,CAAP,CAHY,sDAAH,kBAAPJ,CAAAA,OAAO,2CAAX,CAMA,GAAIK,CAAAA,UAAU,2FAAG,wIACfJ,KAAK,qBAAsB,CACzBK,MAAM,CAAE,MADiB,CAEzBC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFgB,CAKzBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf,CALmB,CAAtB,CAAL,CADe,wDAAH,kBAAVQ,CAAAA,UAAU,2CAAd,CAUA,GAAIM,CAAAA,UAAU,2FAAG,wIACfV,KAAK,qBAAcL,EAAd,aAA4B,CAC/BU,MAAM,CAAE,KADuB,CAE/BC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFsB,CAK/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf,CALyB,CAA5B,CAAL,CAOAE,OAAO,CAAC,GAAD,CAAP,CARe,wDAAH,kBAAVY,CAAAA,UAAU,2CAAd,CAWA,GAAIC,CAAAA,UAAU,2FAAG,6IACXhB,EAAE,GAAK,KADI,oEAEfK,KAAK,qBAAcL,EAAd,aAA4B,CAC/BU,MAAM,CAAE,QADuB,CAE/BC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFsB,CAA5B,CAAL,CAFe,wDAAH,kBAAVK,CAAAA,UAAU,2CAAd,CAUA,GAAIC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,GAAIjB,EAAE,GAAK,KAAP,EAAgBC,IAAI,CAACW,IAAL,GAAc,EAAlC,CAAsC,CACpC;AACAI,UAAU,GACX,CAHD,IAGO,IAAIhB,EAAE,GAAK,KAAX,CAAkB,CACvB;AACAe,UAAU,GACX,CAHM,IAGA,IAAIf,EAAE,GAAK,KAAP,EAAgBC,IAAI,GAAK,IAA7B,CAAmC,CACxCQ,UAAU,GACX,CACDN,OAAO,CAAC,GAAD,CAAP,CACD,CAXD,CAaA,mBACE,aAAK,SAAS,CAAC,MAAf,wBACE,aAAK,SAAS,CAAC,aAAf,wBACE,iCACE,KAAC,SAAD,EAAW,OAAO,CAAEc,YAApB,EADF,EADF,CAIGjB,EAAE,GAAK,KAAP,cACC,eAAQ,OAAO,CAAEgB,UAAjB,qBADD,cAGC,eAAQ,OAAO,CAAEC,YAAjB,mBAPJ,GADF,cAWE,iBACE,QAAQ,CAAE,kBAACC,CAAD,CAAO,CACfhB,OAAO,gCAAMD,IAAN,MAAYW,IAAI,CAAEM,CAAC,CAACC,MAAF,CAASC,KAA3B,GAAP,CACD,CAHH,CAIE,KAAK,CAAEnB,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAEW,IAJf,EAXF,GADF,CAoBD,CA/ED,CAiFA,cAAeb,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\r\n\r\nconst NotePage = ({}) => {\r\n  let { id } = useParams();\r\n  let [note, setNote] = useState(null);\r\n  const history = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getNote();\r\n  }, [id]);\r\n\r\n  let getNote = async () => {\r\n    let response = await fetch(`/api/note/${id}`);\r\n    let data = await response.json();\r\n    setNote(data);\r\n  };\r\n\r\n  let createNote = async () => {\r\n    fetch(`/api/note/create/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(note),\r\n    });\r\n  };\r\n\r\n  let updateNote = async () => {\r\n    fetch(`/api/note/${id}/update/`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(note),\r\n    });\r\n    history(\"/\");\r\n  };\r\n\r\n  let deleteNote = async () => {\r\n    if (id === \"new\") return;\r\n    fetch(`/api/note/${id}/delete/`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  };\r\n\r\n  let handleSubmit = () => {\r\n    if (id !== \"new\" && note.body === '') {\r\n      // if note is empty and it's not a new note, delete it\r\n      deleteNote();\r\n    } else if (id !== \"new\") {\r\n      // else update note\r\n      updateNote();\r\n    } else if (id === \"new\" && note !== null) {\r\n      createNote();\r\n    }\r\n    history(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      <div className=\"note-header\">\r\n        <h3>\r\n          <ArrowLeft onClick={handleSubmit} />\r\n        </h3>\r\n        {id !== \"new\" ? (\r\n          <button onClick={deleteNote}> Delete</button>\r\n        ) : (\r\n          <button onClick={handleSubmit}> Done</button>\r\n        )}\r\n      </div>\r\n      <textarea\r\n        onChange={(e) => {\r\n          setNote({ ...note, body: e.target.value });\r\n        }}\r\n        value={note?.body}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotePage;\r\n"]},"metadata":{},"sourceType":"module"}