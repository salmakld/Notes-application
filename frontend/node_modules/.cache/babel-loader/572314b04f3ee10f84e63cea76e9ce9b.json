{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MohamedCHERCHERI\\\\Desktop\\\\Salma\\\\salma_jobs\\\\Learn\\\\Projects\\\\Django\\\\notes_app\\\\frontend\\\\src\\\\pages\\\\NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = _ref => {\n  _s();\n\n  let {} = _ref;\n  let {\n    id\n  } = useParams();\n  let [note, setNote] = useState(null);\n  const history = useNavigate();\n  useEffect(() => {\n    getNote();\n  }, [id]);\n\n  let getNote = async () => {\n    let response = await fetch(`/api/note/${id}`);\n    let data = await response.json();\n    setNote(data);\n  };\n\n  let updateNote = async () => {\n    fetch(`/api/note/${id}/update/`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n    history(\"/\");\n  };\n\n  let deleteNote = async () => {\n    if (id === 'new') return;\n    fetch(`/api/note/${id}/delete/`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    history(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: updateNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \" Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({ ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotePage, \"MfrgX6KsiKFrW8TXv6d8XqGjPmk=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"sources":["C:/Users/MohamedCHERCHERI/Desktop/Salma/salma_jobs/Learn/Projects/Django/notes_app/frontend/src/pages/NotePage.js"],"names":["React","useEffect","useState","useParams","useNavigate","ReactComponent","ArrowLeft","NotePage","id","note","setNote","history","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","deleteNote","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAwC,kBAAxC;AACA,SAASC,cAAc,IAAIC,SAA3B,QAA4C,0BAA5C;;;AAEA,MAAMC,QAAQ,GAAG,QAAQ;AAAA;;AAAA,MAAP,EAAO;AACvB,MAAI;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAtB;AACA,MAAI,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAMS,OAAO,GAAEP,WAAW,EAA1B;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACJ,EAAD,CAFM,CAAT;;AAIA,MAAII,OAAO,GAAG,YAAY;AACxB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAYN,EAAG,EAAjB,CAA1B;AACA,QAAIO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACAN,IAAAA,OAAO,CAACK,IAAD,CAAP;AACD,GAJD;;AAMA,MAAIE,UAAU,GAAG,YAAY;AAC3BH,IAAAA,KAAK,CAAE,aAAYN,EAAG,UAAjB,EAA4B;AAC/BU,MAAAA,MAAM,EAAE,KADuB;AAE/BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFsB;AAK/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;AALyB,KAA5B,CAAL;AAQAE,IAAAA,OAAO,CAAC,GAAD,CAAP;AAED,GAXD;;AAaA,MAAIY,UAAU,GAAG,YAAY;AAC3B,QAAIf,EAAE,KAAK,KAAX,EAAkB;AAClBM,IAAAA,KAAK,CAAE,aAAYN,EAAG,UAAjB,EAA4B;AAC/BU,MAAAA,MAAM,EAAE,QADuB;AAE/BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFsB,KAA5B,CAAL;AAOAR,IAAAA,OAAO,CAAC,GAAD,CAAP;AACD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEM;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGT,EAAE,KAAK,KAAP,gBACC;AAAQ,QAAA,OAAO,EAAEe,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAU,MAAA,QAAQ,EAAGC,CAAD,IAAO;AAACd,QAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,kBAAOe,CAAC,CAACC,MAAF,CAASC;AAA1B,SAAD,CAAP;AAA0C,OAAtE;AAAwE,MAAA,YAAY,EAAEjB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEW;AAA5F;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA1DD;;GAAMb,Q;UACSJ,S,EAEEC,W;;;KAHXG,Q;AA4DN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate  } from \"react-router-dom\";\r\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\r\n\r\nconst NotePage = ({}) => {\r\n  let { id } = useParams();\r\n  let [note, setNote] = useState(null);\r\n  const history= useNavigate()\r\n\r\n\r\n  useEffect(() => {\r\n    getNote();\r\n  }, [id]);\r\n\r\n  let getNote = async () => {\r\n    let response = await fetch(`/api/note/${id}`);\r\n    let data = await response.json();\r\n    setNote(data);\r\n  };\r\n\r\n  let updateNote = async () => {\r\n    fetch(`/api/note/${id}/update/`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(note)\r\n    });\r\n\r\n    history(\"/\")\r\n\r\n  }\r\n\r\n  let deleteNote = async () => {\r\n    if (id === 'new') return\r\n    fetch(`/api/note/${id}/delete/`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    history(\"/\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      <div className=\"note-header\">\r\n        <h3>\r\n          <ArrowLeft onClick={updateNote}/>\r\n        </h3>\r\n        {id !== 'new' ? (\r\n          <button onClick={deleteNote}> Delete</button>\r\n        ): (\r\n          <button> Done</button>\r\n        )\r\n        }\r\n      </div>\r\n      <textarea onChange={(e) => {setNote({...note, 'body':e.target.value})}} defaultValue={note?.body} />\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default NotePage;\r\n"]},"metadata":{},"sourceType":"module"}